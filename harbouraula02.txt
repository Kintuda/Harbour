1º //Executador admin
2º d: //entrar no hdd secundário()
3º cd sgtrainee //
4º //Exercício 1 Hello World
/*Padrão SG exe01 de nomenclatura de exercicios;
Editor IDE: Arsenal Tools (Q)
Harbour Extensão.prg
Exemplo:q(Editor de text) exe01.prg(nome do arquivo com extensão)*/
Topo esquerdo 00
00-24(25 linhas)
00-79(80 colunas)
Informação na tela aspas simples(say'')
Salvar arquivo : CTRL+ K + S
Sair para compilar : ALT+ X
Volta para CMD
Compilar o arquivo : hbmk2 exe01.prg
executar : exe01.exe
Sempre colocar clear no começo dos programas*
Exercício 1 Hello world;
	clear
	@ 12,01 say 'alô mundo!'
Bordas
	@ 04,20 to 10,70
Comando inKey(0)
	Temporizador 
	0 é quantidade de segundos aguardando
	0 vai pausar até uma tecla for apertada
	Equivalente à Console.readKey()
	5 segundos == (0.5)
ALT + C 
	Kill programa
@ 05,01 say Replicate('*',70)
	Replica Caracteres
Tela de atalho F4
	Duplica linha
Set color to W/B
	W = Cor da letra
	B = Cor do fundo
		Tabela de cores
			N = Preto
			B = Azul
			R = Vermelho
			G = Verde
			RB = Magenta
			W = Branco
		Cor da letra apenas 
			N+ Cinza
			B+ Azul claro
			R+ Vermelho Claro
			G+ Verde Claro
			W+ Branco Neve
			RB+ Rosa Claro
			BG+ Ciano Claro
			GR+ Amarelo Claro
			#Se for usar essas letras para o fundo troca o + por *
	set color to
		Retorna as cores padrão Letra branca sobre tela preta
Pode se usar clear para setar outra cor como um input de senha
Qual dos três inputs é o maior
	nMaior:= 0
	INPUT "Digite um número" TO nValor1
	INPUT "Digite um número" TO nValor2
	INPUT "Digite um número" To nValor3
		if nValor1>nValor2
			nMaior = nValor
		else
			nMaior = nValor2
		if nMaior > nValor3
			nMaior = nMaior
		else
			nMaior = nValor3
	@ 01,01 say 'O Maior Número foi', nMaior
	//Opção de usar read no lugar do input
	Vlademiro Landim Junior
	TCC Linguagem Harbour
//////////////////////////////////////////////////////////////////////////////////
Dia 3 Variáveis Numéricas 
	nNumero :=
		Colocar espaço entre a variável e o simbolo recebe e depois também*
		Aliarem apenas em bloco de variaveis indentação 
	+Str(Variavel dentro)
		Função de converter Numeric to string
		Mesmo função no Python
	CTRL+ H 
		Auto completa o nome de uma variável 
		Se não existir ele retorna como uma variavel não existente 
	Retirar espaço em branco de strings
		@ 00,00 say 'Algum texto' +alltrim(Str(nVariavel))
		Geralmente não se usa o Rtrim e o Ltrim apenas o Alltrim
		Rtrim Remove o espaço da direita
		Ltrim Remove espaço em branco a esquerda
		Alltrim só funciona para texto
	@ nLinhainicial,nColunaInicial clear to nLinhaFinal,nColunaFinal
		Limpa uma região na tela
	@ 2,10 say 'Teste de cor' color 'GR+/R'
		Adiciona cor apenas para a Linha
		Informar as informações tem que ser antes do color
		Ultima informação 
	PadC(cTexto,nTamanho,cPreenchimento)
		Retorna o texto centralizado
		Cria paddings passando 3 argumentos
		cTexto String a ser exibido
		nTamanho Tamanho do padding 
		cPreenchimento Default := espaço vazio //se quiser=>
		Preencher com traços colocar no local (-)
		@ 2,0 say PadC('SG Trainee',80,'-')
		//Variantes 
			PadR adiciona padding a direita
			PadL adiciona padding a esquerda
			PadC centraliza adiciona padding a esquerda ou direita
	ALT + D 
		Corta e guarda na memória na linha
	CTRL + U
		Recupera na linha selecionada
	Dica
		Criar uma moldura para auxiliar na posição dos elemnentos do sistema

/////////////////////////////////////////////////////////////////////////////////////////
Dia 4
Entrada de dados
	Get edita o valor de uma variavel
	nNumero1 := 0
	nNumero2 := 0
	@ 01,01 say 'Digite o numero 1'
	@ 02,01 say 'Digite o numero 2'
	@ 01,20 GET nNumero1
	@ 02,20 GET nNumero2
	read
	*A variavel a ser editada precisa ser criada antes de executar get 
	GET
		Agrupar o GET
		Identar os GET na mesma coluna (boas práticas)
		GET possui espaço de 10 linha por padrão
		Números seram alinhados a direita
Seccionar partes do programa (criar blocos)
	Agrupar GETS SAYS variaveis em blocos diferente para melhorar a leitura de
	codigo
	Parte onde determinas as variáveis 
	Outra parte lógica
set scoreboard off
	Comando para retirar status do insert no topo do CMD
/////////////////////////////////////////////////////////////////////////////////////
					Dia 5	

Usando 'to' para criar linhas verticais e horizontais
	Formatação de número no get
		@ 02,20 get nIdade picture '999' (valores inteiros)
		@ 04,20 get nPeso  picture '999.99' (Valores decimais)
		@ 06,20 get nPrecoUnitario  picture '@e 999,999.99' (Valores monetarios)
			Possibilita a delimitar espaço dos get e say e formatar o espaçamento
			picture funciona sozinha apenas usando alltrim str ocorre erro
		Também delimita o  máximo de caracteres aceito no GET ou SAY
		
	Transform(nValor cPicture)
		Formata o número dentro de um texto
		@10,02 say 'o valor total e' transform(nTotal,'@E 999,999.99')
		@12,02 say 'Valor sem espaço ' + alltrim(transform(nTotal,'@E 999,999.99')
		Transform não funciona no get
			Nenhuma função funciona no get

	ALT+E Abre arquivo
	ALTN+N ALTERNA ENTRE ARQUIVOS
	





//////////////////////////////////
					Dia 6
INPUT DE STRING
	cNome := Space(50) // Tamanho do alocador de espaço para o get
	@ 01,01 say 'nome: '
	@ 01,07 get cNome picture '@!' //Mascara @! para colocar as strings para maiúsculo ToUpper()
Data
	dData 	   := CtoD('') //CtoD caractere to date conversor de string para data
	// Método de inicar um variavel data
	dDataAtual := Date() //Retorna dado data
	@ 01,20 get dData
	@ 02,20 get dDataAtual
		Formatação automática 
		Não é necessário um picture para formatar a variável
	read
	Set Date British
		Transforma a data do modo Americano MM/DD/AAA (Default) para o modo Britânico DD/MM/AA
	Set Epoch to 1940
		Coloca o padrao no inicio da ano inicial 
		Harbour só retorna os dois últimos digitos do ano
		range 1940 até 2039
	Set Century on
		Por padrao ultiliza apenas dois dígitos ou seja off
		Habilita a ultilização dos quatros digitos no ano
	Transforma data para usar com string
		DtoC(dData)
	Modo sem usar uma variável
		@ 10,02 say 'Data Atual' + DtoC(Date())
		
		
		
//////////////////////////////
					Dia 7

Colocar verificações no input do usuário
	Ex
	cNome    := space(50)
	nIdade   := 0
	nValor   := 0
	dEmissao := CtoD('')
	cSexo    := Space(1)
	(conjunto de SAYs)
	@ 02,25 get cNome picture '@!'   	   valid !empty(cNome)
	@ 03,25 get nIdade picture '999'           valid nIdade > 0 .and. nIdade <=120
	@ 04,25 get nValor picture '@E 9,999.99'   valid nValor >= 0
	@ 05,25 get dEmissao		           valid !empty(dEmissao) and dEmissao <= Date()
	@ 06,25 get cSexo 			   valid cSexo == 'F' .or. 'M'
							 //Pode ser usado desse modo 
							 cSexo $ 'MF' //Usado apenas para caracteres 
	read
		valid << expressão lógica >>
		valid só funciona com get
		



	Exercício 6






Exercicio Da apostila 
clear                                                                          │
clear                                                                          │
//Exercício 3                                                                  │
set color to G/B                                                               │
@ 00,00 clear to 10,50                                                         │
nNumero := 10                                                                  │
nNumero2 := 20                                                                 │
nResultado:= nNumero*nNumero2                                                  │
@ 00,00 to 10,50 double                                                        │
@ 03,01 clear to 06,01                                                         │
@ 02,01 say Replicate('-',49)                                                  │
set color to B/G                                                               │
@ 01,01 say PadC('Sistema de multiplicao',49,)                                 │
@ 03,01 say PadC('Valor1 = '+Alltrim(Str(nNumero)),49)                         │
@ 04,01 say PadC('Valor2 = '+Alltrim(Str(nNumero2)),49)                        │
@ 05,01 say PadC('Resultado da multiplicacao = '+Alltrim(Str(nResultado)),49)  │
inKey(0)                                                                       │
/*
